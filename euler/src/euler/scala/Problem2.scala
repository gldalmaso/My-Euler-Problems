package euler

/**
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
 * By starting with 1 and 2, the first 10 terms will be:
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
 * find the sum of the even-valued terms.
 */
class Problem2 extends Problem {

	def resolve() = {
		println("Begin problem 2...")
		var sum = 2;
		val limit = 4000000
		var first = 1;
		var last = 2;
		var fib = 0
		while (fib <= limit) {
			fib = first + last
			first = last
			last = fib
			//print(fib + ", ")
			if (fib % 2 == 0) sum += fib
		}
		println("Sum = " + sum)
	}
}